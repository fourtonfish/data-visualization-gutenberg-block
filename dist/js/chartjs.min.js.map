{"version":3,"sources":["chartjs.js"],"names":["ready","fn","document","readyState","addEventListener","window","ftfHelpers","convertHex","hex","opacity","parseInt","substring","pSBC","replace","p","c0","c1","l","r","g","b","P","f","t","h","i","m","Math","round","a","d","result","split","n","length","x","slice","parseFloat","this","pSBCr","pow","toString","undefined","invertColor","bw","indexOf","padZero","str","len","join","chartLabels","datavizType","chartEl","dataset","type","chartData","sort","JSON","stringify","ftfDataviz","sourceId","data_labels_sorted","data_series_sorted","parse","data_labels","data_series","ignoreNull","datapoints","indexOuter","forEach","datapoint","indexInner","removeDatapoint","filter","item","colorSchemeIndex","limit","datasets","label","data","index","axis_label_values","dataArray","push","__custom_meta","prefix","suffix","colorScheme","backgroundColor","colorPalettes","dataRows","fill","columnFilter","log","selectHtml","concat","map","console","labels","options","scaleLabel","display","labelString","axis_label_title","ticks","logScale","beginAtZero","userCallback","value","toLocaleString","axesValues","maxTicksLimit","isAdmin","chartOptions","scales","yAxes","axesLabels","callbacks","tooltipItem","xLabel","xAxes","tooltips","datasetIndex","yLabel","responsive","hoverBorderWidth","borderWidth","selectedColorScheme","Object","keys","hoverBorderColor","color","borderColor","title","clearActive","activate","activateNext","selectedIndex","meta","Chart","controller","removeHoverStyle","setHoverStyle","newChart","getDatasetMeta","activatePrev","e","key","getElementsByClassName","wpAdmin","charts","from"],"mappings":"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","file":"chartjs.min.js","sourcesContent":["'use strict';\n\nfunction ready( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nwindow.ftfHelpers = window.ftfHelpers || {};\n\nftfHelpers.convertHex = function( hex, opacity ){\n    /* https://gist.github.com/danieliser/b4b24c9f772066bcf0a6 */\n    if (!hex){\n        hex = '#000000';\n    }\n\n    hex = hex.replace( '#','' );\n\n    let r, g, b;\n\n    r = parseInt( hex.substring( 0,2 ), 16 );\n    g = parseInt( hex.substring( 2,4 ), 16 );\n    b = parseInt( hex.substring( 4,6 ), 16 );\n\n    let result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n    return result;\n}\n\nftfHelpers.pSBC = function(p,c0,c1,l){\n    let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n    if(!this.pSBCr)this.pSBCr=(d)=>{\n        let n=d.length,x={};\n        if(n>9){\n            [r,g,b,a]=d=d.split(\",\"),n=d.length;\n            if(n<3||n>4)return null;\n            x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n        }else{\n            if(n==8||n==6||n<4)return null;\n            if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n            d=i(d.slice(1),16);\n            if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n            else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n        }return x};\n    h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n    if(!f||!t)return null;\n    if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n    else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n    a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n    if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n    else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n}\n\nftfHelpers.invertColor = function( hex, bw ) {\n    if ( hex.indexOf( '#' ) === 0 ) {\n        hex = hex.slice( 1 );\n    }\n\n    if ( hex.length === 3 ) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\n        g = parseInt( hex.slice( 2, 4 ), 16 ),\n        b = parseInt( hex.slice( 4, 6 ), 16 );\n\n    if ( bw ) {\n        return ( r * 0.299 + g * 0.587 + b * 0.114 ) > 186\n            ? '#000000'\n            : '#FFFFFF';\n    }\n\n    r = ( 255 - r ).toString( 16 );\n    g = ( 255 - g ).toString( 16 );\n    b = ( 255 - b ).toString( 16 );\n\n    return '#' + ftfHelpers.padZero( r ) + ftfHelpers.padZero( g ) + ftfHelpers.padZero( b );\n}\n\nftfHelpers.padZero = function( str, len ) {\n    len = len || 2;\n    var zeros = new Array( len ).join( '0' );\n    return ( zeros + str ).slice( -len );\n}\n\nftfHelpers.renderChart = function( chartEl ){\n    if ( !chartEl ){ return false; }\n\n    let colorSchemeIndex = 3;\n    let datavizType = chartEl.dataset.type || 'bar';\n\n    let chartLabels, chartData;\n\n    if ( chartEl.dataset.sort && chartEl.dataset.sort === 'true' ){\n        chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_sorted ) );\n        chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_sorted ) );\n    } else {\n        chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels ) );\n        chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series ) );\n    }\n\n    if ( chartEl.dataset.ignoreNull && chartEl.dataset.ignoreNull === 'true' ){\n\n        chartData.forEach( function( datapoints, indexOuter ){\n            let removeDatapoint = true;\n\n            datapoints.forEach( function( datapoint, indexInner ){\n                if ( chartData[indexOuter][indexInner] && parseInt( chartData[indexOuter][indexInner] ) !== 0 ){\n                    removeDatapoint = false;\n                }\n            } );\n\n            if ( removeDatapoint ){\n                delete chartData[indexOuter];\n                delete chartLabels[indexOuter];\n            }\n        } );\n\n        chartData = chartData.filter( function ( item ){ return item != undefined } );\n        chartLabels = chartLabels.filter( function ( item ){ return item != undefined } );\n    }\n\n\n    if ( chartEl.dataset.sort && chartEl.dataset.sort === 'true' && chartEl.dataset.limit ){\n        chartLabels = chartLabels.slice( 0, chartEl.dataset.limit );\n        chartData = chartData.slice( 0, chartEl.dataset.limit );\n    }\n\n    if ( chartData.length > 3 ){\n        colorSchemeIndex = chartData.length;\n    }\n\n    const dataRows = chartData[0].length;\n    let datasets = [];\n\n    for( let i = 0; i < dataRows; i++ ){\n        let dataArray = [];\n        let label = '';\n\n        chartData.forEach( function( data, index ){\n            label = window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_values[i];\n\n            // const label = chartData[i][index];\n            dataArray.push( chartData[index][i] );\n        } );\n\n        let dataset = {\n            label: label,\n            data: dataArray,\n            __custom_meta: {\n                prefix: chartEl.dataset.prefix,\n                suffix: chartEl.dataset.suffix\n            }\n        };\n\n        if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n            if ( [ 'bar', 'horizontalBar' ].indexOf( datavizType ) !== -1 ){\n                dataset.backgroundColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n            } else if ( datavizType === 'line' ){\n                dataset.borderColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                dataset.fill = false;\n            }\n        }\n\n        datasets.push( dataset );\n    }\n\n    if ( chartEl.dataset.columnFilter && chartEl.dataset.columnFilter === 'true' ){\n        console.log( 'datasets', datasets );\n\n        for ( let i = 1; i < datasets.length; i++ ){\n            console.log( 'data map', datasets[i] );\n            let selectHtml = `<label>${datasets[i].label}\n                <select name=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\" id=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\">\n                  ${\n                    datasets[i].data.map( function( data ){\n                        console.log( 'data map', data );\n                        return `<option value=\"option\">option</option>`;\n                    } )\n                  }\n                </select>\n            </label>`; \n\n            console.log( 'dataset ' + i, datasets[i] );\n            console.log( 'selectHtml', selectHtml );\n\n        }\n    \n        datasets = [datasets[0]];\n    }\n\n    let chartOptions = {\n        type: datavizType,\n        data: {\n            labels: chartLabels,\n            datasets: datasets\n        },\n        options: {}\n    };\n\n    switch ( datavizType ){\n        case 'horizontalBar':\n        case 'bar':\n        case 'line':\n            const axesLabels = [{\n                scaleLabel: {\n                    display: true,\n                    // labelString: chartEl.dataset.axisLabelData\n                    labelString: window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title\n                },\n                ticks: {\n                    beginAtZero: true,\n                    // userCallback: function( value, index, values)  {\n                    //     return value.toLocaleString();\n                    // }\n                }\n            }];\n\n            const axesValues = [{\n                scaleLabel: {\n                    display: true,\n                    labelString: chartEl.dataset.label\n                },\n                type: chartEl.dataset.logScale ? 'logarithmic' : 'linear',\n                ticks: {\n                    beginAtZero: true,\n                    userCallback: function( value, index, values)  {\n                        return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                    }\n                }\n            }];\n\n            if ( chartEl.dataset.logScale && chartData.length > 4 ){\n                /* Temporary fix for labels overlapping when using logarithmic scale. */\n                // axesValues[0].ticks.minRotation = 30;\n                axesValues[0].ticks.maxTicksLimit = chartData.length;\n            }\n\n            if ( ftfHelpers.isAdmin() ){\n                // axesValues[0].ticks.maxTicksLimit = chartData.length;\n                axesValues[0].ticks.maxTicksLimit = 4;\n            }\n\n            if ( datavizType === 'horizontalBar' ){\n                chartOptions.options.scales = {\n                    xAxes: axesValues,\n                    yAxes: axesLabels\n                };\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + tooltipItem.xLabel.toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n            } else {\n                chartOptions.options.scales = {\n                    xAxes: axesLabels,\n                    yAxes: axesValues\n                };\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data.datasets[tooltipItem[0].datasetIndex].label;\n                    },\n                    label: function( tooltipItem, data ) {\n                        return `${data.labels[tooltipItem.index]}: ${data['datasets'][0]['__custom_meta']['prefix']}${tooltipItem.yLabel.toLocaleString()}${data['datasets'][0]['__custom_meta']['suffix']}`;\n                    }\n                  }\n                }\n            }\n\n            chartOptions.options.responsive = true;\n            \n            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                chartOptions.data.datasets.forEach( function( dataset, index ){\n                    dataset.hoverBorderWidth = 4;\n                    dataset.hoverBorderColor = ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][index] ) );\n                    dataset.borderWidth = 4;\n                } );\n\n            }\n\n            break;\n        case 'pie':\n        case 'doughnut':\n        case 'polarArea':\n            for( let i = 0; i < dataRows; i++ ){\n                if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                    let selectedColorScheme;\n\n                    if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length] ){\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length];\n                    } else {\n\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                    }\n\n                    chartOptions.data.datasets[i].backgroundColor = selectedColorScheme;\n                    chartOptions.data.datasets[i].hoverBorderColor = selectedColorScheme.map( function( color ){\n                        return ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( color ) );\n                    } );\n\n                    chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                    chartOptions.data.datasets[i].borderWidth = 4;\n                }\n            }\n\n            chartOptions.options.tooltips = {\n              callbacks: {\n                title: function(tooltipItem, data) {\n                    return data['labels'][tooltipItem[0]['index']];\n                },\n                label: function( tooltipItem, data ) {\n                    return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                }\n              }\n            }\n\n            break;\n        case 'radar':\n            for( let i = 0; i < dataRows; i++ ){\n                if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                \n\n                    let selectedColorScheme;\n\n                    if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                    } else {\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                    }\n\n                    // chartOptions.data.datasets[i].fill = 'start';\n                    chartOptions.data.datasets[i].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[i], 20 );\n                    chartOptions.data.datasets[i].borderColor = ftfHelpers.convertHex( selectedColorScheme[i], 40 );\n                    chartOptions.data.datasets[i].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[i] ) ), 40 );\n\n                    chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                    chartOptions.data.datasets[i].borderWidth = 4;\n                }\n            }\n\n            chartOptions.options.tooltips = {\n              callbacks: {\n                title: function(tooltipItem, data) {\n                    return data['labels'][tooltipItem[0]['index']];\n                },\n                label: function( tooltipItem, data ) {\n                    return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                }\n              }\n            }\n\n            break;\n    }\n\n    // console.log( 'rendering chart...', chartEl, chartOptions );\n\n    let newChart = new Chart( chartEl, chartOptions );\n\n    if ( !ftfHelpers.isAdmin() ){\n        /* Chart.js accessibility via https://codepen.io/kurkle/pen/WNrwjMp */\n\n        let selectedIndex = -1;\n        const meta = newChart.getDatasetMeta( 0 );\n\n        function clearActive() {\n            if (selectedIndex > -1) {\n                meta.controller.removeHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n            }\n        }\n\n        function activate() {\n            meta.controller.setHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n            newChart.render();\n        }\n\n        function activateNext() {\n            clearActive();\n            selectedIndex = (selectedIndex + 1) % meta.data.length;\n            activate();\n        }\n\n        function activatePrev() {\n            clearActive();\n            selectedIndex = ( selectedIndex || meta.data.length ) -1;\n            activate();\n        }\n\n        chartEl.addEventListener( 'focus', function(){\n            if (selectedIndex === -1) {\n                activateNext();\n            } else {\n                activate();\n            }\n        } );\n\n        chartEl.addEventListener( 'blur', function(){\n            clearActive();\n            newChart.render();\n        } );\n\n        chartEl.addEventListener( 'keydown', function( e ) {\n            if ( e.key === 'ArrowRight' ) {\n                activateNext();\n            } else if ( e.key === 'ArrowLeft' ) {\n                activatePrev();\n            }\n        } );\n    }\n\n}\n\nftfHelpers.isAdmin = function(){\n    const wpAdmin = document.getElementsByClassName( 'wp-admin' );\n    return wpAdmin && wpAdmin.length;\n}\n\nready( function(){\n    let charts = document.getElementsByClassName( 'ftf-dataviz-chart' );\n    Array.from( charts ).forEach( function( chartEl ){\n        ftfHelpers.renderChart( chartEl );\n    } );\n} );\n"]}