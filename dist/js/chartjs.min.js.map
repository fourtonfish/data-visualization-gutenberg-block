{"version":3,"sources":["chartjs.js"],"names":["ready","fn","document","readyState","addEventListener","window","ftfHelpers","isMobile","a","check","navigator","userAgent","vendor","opera","test","substr","convertHex","hex","opacity","replace","parseInt","substring","pSBC","p","c0","c1","l","r","g","b","P","f","t","h","i","m","Math","round","pSBCr","n","d","length","x","_d2","_slicedToArray","split","slice","parseFloat","this","result","pow","toString","undefined","invertColor","bw","indexOf","padZero","str","len","Array","join","renderChart","chartEl","chartOptions","dataset","config","eval","err","console","log","chartLabels","chartData","datavizType","type","sourceId","JSON","parse","stringify","ftfDataviz","data_labels_raw","data_series_raw","sort","data_labels_sorted","data_series_sorted","data_labels","data_series","ignoreNull","removeDatapoint","forEach","datapoint","indexInner","indexOuter","filter","item","limit","__custom_meta","axesValues","dataRows","label","axis_label_values","push","prefix","colorScheme","colorPalettes","borderColor","datasets","concat","data","suffix","labels","dataArray","display","axis_label_title","beginAtZero","scaleLabel","labelString","logScale","selectHtml","autoSkip","min","userCallback","value","toLocaleString","afterBuildTicks","chartObj","_chartObj$ticks","dataValues","apply","map","v","ticks","splice","_toConsumableArray","isAdmin","maxTicksLimit","options","scales","xAxes","yAxes","axesLabels","callbacks","tooltipItem","xLabel","tooltips","title","datasetIndex","index","yLabel","hoverBorderWidth","hoverBorderColor","borderWidth","selectedColorScheme","Object","keys","color","responsive","labelY","backgroundColor","datapoints","y","position","stepSize","Date","toLocaleDateString","language","month","year","minorTickInterval","legend","day","showGridlines","xAxis","yAxis","drawBorder","parentElement","querySelector","gridLines","setAttribute","style","fontSize","drawOnChartArea","width","newChart","Chart","clearActive","activate","activatePrev","meta","selectedIndex","controller","removeHoverStyle","render","getDatasetMeta","activateNext","e","key","wpAdmin","getElementsByClassName","charts","_step","ev","closest","dataVizEl","innerHTML","target","dataIndex","dataRow","mapData","querySelectorAll","textContent"],"mappings":"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","file":"chartjs.min.js","sourcesContent":["'use strict';\n\nfunction ready( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nwindow.ftfHelpers = window.ftfHelpers || {};\n\nftfHelpers.isMobile = function(){\n    var check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n}\n\nftfHelpers.convertHex = function( hex, opacity ){\n    /* https://gist.github.com/danieliser/b4b24c9f772066bcf0a6 */\n    if (!hex){\n        hex = '#000000';\n    }\n\n    hex = hex.replace( '#','' );\n\n    let r, g, b;\n\n    r = parseInt( hex.substring( 0,2 ), 16 );\n    g = parseInt( hex.substring( 2,4 ), 16 );\n    b = parseInt( hex.substring( 4,6 ), 16 );\n\n    let result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n    return result;\n}\n\nftfHelpers.pSBC = function(p,c0,c1,l){\n    let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n    if(!this.pSBCr)this.pSBCr=(d)=>{\n        let n=d.length,x={};\n        if(n>9){\n            [r,g,b,a]=d=d.split(\",\"),n=d.length;\n            if(n<3||n>4)return null;\n            x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n        }else{\n            if(n==8||n==6||n<4)return null;\n            if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n            d=i(d.slice(1),16);\n            if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n            else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n        }return x};\n    h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n    if(!f||!t)return null;\n    if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n    else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n    a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n    if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n    else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n}\n\nftfHelpers.invertColor = function( hex, bw ) {\n    if ( !hex ){\n        return null;\n    }\n    if ( hex.indexOf( '#' ) === 0 ) {\n        hex = hex.slice( 1 );\n    }\n\n    if ( hex.length === 3 ) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\n        g = parseInt( hex.slice( 2, 4 ), 16 ),\n        b = parseInt( hex.slice( 4, 6 ), 16 );\n\n    if ( bw ) {\n        return ( r * 0.299 + g * 0.587 + b * 0.114 ) > 186\n            ? '#000000'\n            : '#FFFFFF';\n    }\n\n    r = ( 255 - r ).toString( 16 );\n    g = ( 255 - g ).toString( 16 );\n    b = ( 255 - b ).toString( 16 );\n\n    return '#' + ftfHelpers.padZero( r ) + ftfHelpers.padZero( g ) + ftfHelpers.padZero( b );\n}\n\nftfHelpers.padZero = function( str, len ) {\n    len = len || 2;\n    var zeros = new Array( len ).join( '0' );\n    return ( zeros + str ).slice( -len );\n}\n\nftfHelpers.renderChart = function( chartEl ){\n    if ( !chartEl ){ return false; }\n\n    let chartOptions = {};\n\n    if ( chartEl.dataset.config ){\n        try{\n            // chartOptions = JSON.parse( chartEl.dataset.config );\n            chartOptions = eval( '(' + chartEl.dataset.config + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    } else{\n        let colorSchemeIndex = 3;\n        let datavizType = chartEl.dataset.type || 'bar';\n\n        let chartLabels, chartData;\n        if ( chartEl.dataset.sourceId ){\n            if ( datavizType === 'scatter' ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( datavizType === 'scatter-dates' ){\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( chartEl.dataset.sort && chartEl.dataset.sort === 'true' ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_sorted ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_sorted ) );\n            } else {\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series ) );\n            }            \n        }\n\n        if ( chartEl.dataset.ignoreNull && chartEl.dataset.ignoreNull === 'true' ){\n\n            chartData.forEach( function( datapoints, indexOuter ){\n                let removeDatapoint = true;\n\n                datapoints.forEach( function( datapoint, indexInner ){\n                    if ( chartData[indexOuter][indexInner] && parseInt( chartData[indexOuter][indexInner] ) !== 0 ){\n                        removeDatapoint = false;\n                    }\n                } );\n\n                if ( removeDatapoint ){\n                    delete chartData[indexOuter];\n                    delete chartLabels[indexOuter];\n                }\n            } );\n\n            chartData = chartData.filter( function ( item ){ return item != undefined } );\n            chartLabels = chartLabels.filter( function ( item ){ return item != undefined } );\n        }\n\n\n        if ( chartEl.dataset.sort && chartEl.dataset.sort === 'true' && chartEl.dataset.limit ){\n            chartLabels = chartLabels.slice( 0, chartEl.dataset.limit );\n            chartData = chartData.slice( 0, chartEl.dataset.limit );\n        }\n\n        if ( chartData && chartData.length > 3 ){\n            colorSchemeIndex = chartData.length;\n        }\n\n        const dataRows = chartData ? chartData[0].length : 0;\n        let datasets = [];\n\n        for( let i = 0; i < dataRows; i++ ){\n            let dataArray = [];\n            let label = '';\n\n            chartData.forEach( function( data, index ){\n                if ( chartEl.dataset.sourceId ){\n                    label = window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_values[i];                    \n                }\n\n                // const label = chartData[i][index];\n                dataArray.push( chartData[index][i] );\n            } );\n\n            let dataset = {\n                label: label,\n                data: dataArray,\n                __custom_meta: {\n                    prefix: chartEl.dataset.prefix,\n                    suffix: chartEl.dataset.suffix\n                }\n            };\n\n            if ( chartEl.dataset.colorScheme ){\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    if ( [ 'bar', 'horizontalBar' ].indexOf( datavizType ) !== -1 ){\n                        dataset.backgroundColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                    } else if ( datavizType === 'line' ){\n                        dataset.borderColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                        dataset.fill = false;\n                    }\n                }\n\n            }\n\n            datasets.push( dataset );\n        }\n\n        if ( chartEl.dataset.columnFilter && chartEl.dataset.columnFilter === 'true' ){\n            for ( let i = 1; i < datasets.length; i++ ){\n                let selectHtml = `<label>${datasets[i].label}\n                    <select name=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\" id=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\">\n                      ${\n                        datasets[i].data.map( function( data ){\n                            return `<option value=\"option\">option</option>`;\n                        } )\n                      }\n                    </select>\n                </label>`; \n            }\n        \n            datasets = [datasets[0]];\n        }\n\n        chartOptions = {\n            type: datavizType,\n            data: {\n                labels: chartLabels,\n                datasets: datasets\n            },\n            options: {}\n        };\n\n        let axesLabels, axesValues;\n\n        switch ( datavizType ){\n            case 'horizontalBar':\n            case 'bar':\n            case 'line':\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: chartEl.dataset.label\n                    },\n                    type: chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ? 'logarithmic' : 'linear',\n                    ticks: {\n                        beginAtZero: true,\n                        autoSkip: true,\n                        min: 0,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    },\n                    afterBuildTicks: (chartObj) => {\n                        const dataValues = [].concat.apply( [], datasets.map( function( datapoint ){\n                            return datapoint.data;\n                        } ) ).map( function( v ){\n                            return Math.pow( 10, Math.floor( v ).toString().length - 1 );\n                        } );\n\n                        if ( ftfHelpers.isMobile() ){\n                            chartObj.ticks.splice(0, chartObj.ticks.length);\n                        }\n\n                        chartObj.ticks.push(...dataValues);\n                    }                    \n                }];\n\n                if ( chartEl.dataset.logScale && chartData.length > 4 ){\n                    /* Temporary fix for labels overlapping when using logarithmic scale. */\n                    // axesValues[0].ticks.minRotation = 30;\n                    axesValues[0].ticks.maxTicksLimit = chartData.length * 3;\n                }\n\n                if ( ftfHelpers.isAdmin() ){\n                    // axesValues[0].ticks.maxTicksLimit = chartData.length;\n                    axesValues[0].ticks.maxTicksLimit = 4;\n                }\n\n                if ( datavizType === 'horizontalBar' ){\n                    chartOptions.options.scales = {\n                        xAxes: axesValues,\n                        yAxes: axesLabels\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        label: function( tooltipItem, data ) {\n                            return data['datasets'][0]['__custom_meta']['prefix'] + tooltipItem.xLabel.toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                        }\n                      }\n                    }\n\n                } else {\n                    chartOptions.options.scales = {\n                        xAxes: axesLabels,\n                        yAxes: axesValues\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        title: function(tooltipItem, data) {\n                            return data.datasets[tooltipItem[0].datasetIndex].label;\n                        },\n                        label: function( tooltipItem, data ) {\n                            return `${data.labels[tooltipItem.index]}: ${data['datasets'][0]['__custom_meta']['prefix']}${tooltipItem.yLabel.toLocaleString()}${data['datasets'][0]['__custom_meta']['suffix']}`;\n                        }\n                      }\n                    }\n                }                \n\n                chartOptions.options.responsive = true;\n\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    chartOptions.data.datasets.forEach( function( dataset, index ){\n                        dataset.hoverBorderWidth = 4;\n                        dataset.hoverBorderColor = ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][index] ) );\n                        dataset.borderWidth = 4;\n                    } );\n\n                }\n\n                break;\n            case 'pie':\n            case 'doughnut':\n            case 'polarArea':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }\n\n                            chartOptions.data.datasets[i].backgroundColor = selectedColorScheme;\n                            chartOptions.data.datasets[i].hoverBorderColor = selectedColorScheme.map( function( color ){\n                                return ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( color ) );\n                            } );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'radar':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                    \n\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }                        \n                            // chartOptions.data.datasets[i].fill = 'start';\n                            chartOptions.data.datasets[i].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[i], 20 );\n                            chartOptions.data.datasets[i].borderColor = ftfHelpers.convertHex( selectedColorScheme[i], 40 );\n                            chartOptions.data.datasets[i].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[i] ) ), 40 );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'scatter':\n            case 'scatter-dates':\n                const labelX = chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : '',\n                      labelY = chartOptions.data.datasets[0].label;\n\n                let selectedColorScheme;\n\n                if ( chartEl.dataset.colorScheme && chartOptions.data.datasets[0] ){\n                    if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                    } else {\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                    }\n\n\n                    chartOptions.data.datasets[0].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[0], 20 );\n                    chartOptions.data.datasets[0].borderColor = ftfHelpers.convertHex( selectedColorScheme[0], 40 );\n                    chartOptions.data.datasets[0].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[0] ) ), 40 );\n                }\n\n                chartOptions.data.datasets[0].hoverBorderWidth = 4;\n                chartOptions.data.datasets[0].borderWidth = 4;\n\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        // max: 3,\n                        // beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: labelY\n                    },\n                    type: chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ? 'logarithmic' : 'linear',\n                    ticks: {\n                        // beginAtZero: true,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    }\n                }];   \n                \n                chartOptions.options.scales = {\n                    xAxes: axesValues,\n                    yAxes: axesLabels\n                };  \n\n                let datapoints = [];\n                chartOptions.data.labels.forEach( function( dataset, i ){\n\n                    let datapoint = { x: null, y: null };\n\n                    if ( datavizType === 'scatter-dates' ){\n                        chartOptions.type = 'scatter';\n                        chartOptions.options.scales = {\n                            'xAxes': [\n                                {\n                                   'type': 'time',\n                                   'position': 'bottom',\n                                   'ticks': {\n                                        beginAtZero: false,\n                                        stepSize: 10,\n\n                                        callback: (value) => {\n                                          return new Date( value ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric' } );\n                                        },\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        beginAtZero: false,\n                                        display: false\n                                    },\n                                    scaleLabel: {\n                                        display: false,\n                                        // labelString: chartEl.dataset.axisLabelData\n                                        // labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                                        // labelString: 'Day of the month'\n                                    },\n                                    minorTickInterval: null\n                                }\n                            ]\n                        };\n\n                        chartOptions.options.legend = {\n                            display: false\n                        };\n\n                        const d = new Date( chartOptions.data.labels[i] );\n                        datapoint.x = d;\n\n                        // Day of the month\n                        datapoint.y = d.getDate();\n\n                        // datapoint.y = i;\n                        // datapoint.y = 0;\n\n                    } else {\n                        datapoint.x = parseFloat( chartOptions.data.labels[i] );\n                        datapoint.y = parseFloat( chartOptions.data.datasets[0].data[i] );\n                    }\n\n                    datapoints.push( datapoint );\n                } );\n                chartOptions.data.datasets[0].data = datapoints;\n                chartOptions.data.datasets = [chartOptions.data.datasets[0]];\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                      return new Date( data['labels'][tooltipItem[0]['index']] ).toLocaleDateString( navigator.language, { day: 'numeric', month: 'long', year: 'numeric' } );\n\n                    },\n                    label: function( tooltipItem, data ) {\n                        return chartEl.dataset.prefix + window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw[tooltipItem['index']] + chartEl.dataset.suffix;\n                    }\n                  }\n                }                \n                break;\n        }\n\n    }\n\n    if ( !chartEl.dataset.showGridlines || chartEl.dataset.showGridlines.toString() === 'false' ){\n        chartOptions.options.scales = chartOptions.options.scales  || {};\n        chartOptions.options.scales.xAxes = chartOptions.options.scales.xAxes  || [];\n        chartOptions.options.scales.yAxes = chartOptions.options.scales.yAxes  || [];\n\n        chartOptions.options.scales.xAxes.forEach( function( xAxis ){\n            xAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n\n        chartOptions.options.scales.yAxes.forEach( function( yAxis ){\n            yAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n    }\n    if ( chartEl.dataset.options ){\n        try{\n            chartOptions.options = eval( '(' + chartEl.dataset.options + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    }\n\n    if ( ftfHelpers.isMobile() ){\n        let svgBorder = chartEl.parentElement.querySelector( 'svg' );\n\n        if ( svgBorder ){\n            svgBorder.setAttribute( 'viewBox', '0 0 500 500' );\n            svgBorder.querySelector( 'path' ).setAttribute( 'd', 'M 0 0  H 500 V 500 H 0 L 0 0' );\n            svgBorder.querySelector( 'textPath' ).style.fontSize = '24px';\n        }\n        chartEl.height = chartEl.width;\n    }\n\n    if ( chartOptions ){\n        // console.log( 'rendering chart...', chartEl, chartOptions );\n        // console.log( 'data', chartOptions.data.datasets );\n\n        try{\n            let newChart = new Chart( chartEl, chartOptions );\n            if ( !ftfHelpers.isAdmin() ){\n                /* Chart.js accessibility via https://codepen.io/kurkle/pen/WNrwjMp */\n\n                let selectedIndex = -1;\n                const meta = newChart.getDatasetMeta( 0 );\n\n                function clearActive() {\n                    if (selectedIndex > -1) {\n                        meta.controller.removeHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                    }\n                }\n\n                function activate() {\n                    meta.controller.setHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                    newChart.render();\n                }\n\n                function activateNext() {\n                    clearActive();\n                    selectedIndex = (selectedIndex + 1) % meta.data.length;\n                    activate();\n                }\n\n                function activatePrev() {\n                    clearActive();\n                    selectedIndex = ( selectedIndex || meta.data.length ) -1;\n                    activate();\n                }\n\n                chartEl.addEventListener( 'focus', function(){\n                    if (selectedIndex === -1) {\n                        activateNext();\n                    } else {\n                        activate();\n                    }\n                } );\n\n                chartEl.addEventListener( 'blur', function(){\n                    clearActive();\n                    newChart.render();\n                } );\n\n                chartEl.addEventListener( 'keydown', function( e ) {\n                    if ( e.key === 'ArrowRight' ) {\n                        activateNext();\n                    } else if ( e.key === 'ArrowLeft' ) {\n                        activatePrev();\n                    }\n                } );\n            }\n        } catch( err ){ /* noop */ }\n    }\n}\n\nftfHelpers.isAdmin = function(){\n    const wpAdmin = document.getElementsByClassName( 'wp-admin' );\n    return wpAdmin && wpAdmin.length;\n}\n\nready( function(){\n    let charts = document.getElementsByClassName( 'ftf-dataviz-chart' );\n    Array.from( charts ).forEach( function( chartEl ){\n        ftfHelpers.renderChart( chartEl );\n    } );\n    let sliders = document.querySelectorAll( '.ftf-dataviz-slider-container' );\n\n    for ( const slider of sliders ) {\n      slider.addEventListener( 'input', function( ev ){\n        const dataVizEl = ev.target.closest( '.ftf-dataviz' );\n\n        // console.log( 'dataVizEl', dataVizEl );\n        // console.log( 'ev.target', ev.target );\n        // console.log( 'ev.target.dataset.data', ev.target.dataset.data );\n\n        dataVizEl.querySelector( '.ftf-dataviz-slider-title' ).innerHTML = ev.target.value;\n\n        const mapData = JSON.parse( ev.target.dataset.data );\n        const dataIndex = ev.target.value - ev.target.min;\n\n        let datapoints = {};\n\n        mapData.forEach( function( datapoint ){\n            datapoints[datapoint[0]] = datapoint[dataIndex+1]\n        } );\n\n        // console.log( 'datapoints', datapoints );\n\n        for ( const dataRow in datapoints ){\n            if ( dataRow && dataRow.length > 0 ){\n\n                let value;\n\n                if ( datapoints[dataRow] ){\n                    value = ev.target.dataset.prefix + datapoints[dataRow] + ev.target.dataset.suffix;\n                } else {\n                    value = datapoints[dataRow];\n                }\n\n                dataVizEl.querySelector( `rect.state.${ dataRow }` ).parentElement.querySelectorAll('text')[1].textContent = value;\n            }\n        }\n\n        // console.log( {\n        //     min: ev.target.min,\n        //     max: ev.target.max,\n        //     value: ev.target.value,\n        //     index: dataIndex,\n        //     prefix: ev.target.dataset.prefix,\n        //     suffix: ev.target.dataset.suffix,\n        //     data: mapData\n        // } );\n      } );\n    }\n} );\n\n// document.querySelector( 'rect.state.NY' );"]}