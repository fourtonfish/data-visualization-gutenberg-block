{"version":3,"sources":["chartjs.js"],"names":["ready","fn","document","readyState","addEventListener","window","ftfHelpers","isMobile","a","check","navigator","userAgent","vendor","opera","test","substr","hex","opacity","parseInt","substring","pSBC","p","c0","c1","l","r","g","b","P","f","t","h","i","m","Math","round","this","pSBCr","d","replace","x","n","length","slice","parseFloat","result","pow","toString","undefined","invertColor","bw","indexOf","padZero","str","len","Array","join","renderChart","chartEl","chartOptions","clearActive","activate","activateNext","activatePrev","selectedIndex","meta","dataset","config","eval","err","console","log","datavizType","type","sourceId","chartLabels","JSON","parse","stringify","ftfDataviz","data_labels_raw","chartData","data_series_raw","sort","data_labels_sorted","data_series_sorted","data_labels","data_series","ignoreNull","forEach","datapoints","indexOuter","removeDatapoint","datapoint","indexInner","filter","item","colorSchemeIndex","limit","axesLabels","datasets","dataArray","label","index","axis_label_values","push","data","__custom_meta","prefix","suffix","colorScheme","colorPalettes","backgroundColor","dataRows","columnFilter","concat","map","labels","options","display","labelString","axis_label_title","ticks","beginAtZero","axesValues","logScale","value","toLocaleString","maxTicksLimit","isAdmin","scales","xAxes","yAxes","tooltips","callbacks","tooltipItem","title","datasetIndex","yLabel","hoverBorderWidth","hoverBorderColor","borderWidth","selectedColorScheme","Object","keys","color","responsive","convertHex","borderColor","labelY","scaleLabel","userCallback","y","position","stepSize","Date","toLocaleDateString","language","month","year","minorTickInterval","legend","getDate","day","showGridlines","xAxis","gridLines","drawBorder","drawOnChartArea","yAxis","height","width","removeHoverStyle","controller","setHoverStyle","newChart","Chart","getDatasetMeta","render","e","key","wpAdmin","charts","getElementsByClassName","from"],"mappings":"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","file":"chartjs.min.js","sourcesContent":["'use strict';\n\nfunction ready( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nwindow.ftfHelpers = window.ftfHelpers || {};\n\nftfHelpers.isMobile = function(){\n    var check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n}\n\nftfHelpers.convertHex = function( hex, opacity ){\n    /* https://gist.github.com/danieliser/b4b24c9f772066bcf0a6 */\n    if (!hex){\n        hex = '#000000';\n    }\n\n    hex = hex.replace( '#','' );\n\n    let r, g, b;\n\n    r = parseInt( hex.substring( 0,2 ), 16 );\n    g = parseInt( hex.substring( 2,4 ), 16 );\n    b = parseInt( hex.substring( 4,6 ), 16 );\n\n    let result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n    return result;\n}\n\nftfHelpers.pSBC = function(p,c0,c1,l){\n    let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n    if(!this.pSBCr)this.pSBCr=(d)=>{\n        let n=d.length,x={};\n        if(n>9){\n            [r,g,b,a]=d=d.split(\",\"),n=d.length;\n            if(n<3||n>4)return null;\n            x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n        }else{\n            if(n==8||n==6||n<4)return null;\n            if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n            d=i(d.slice(1),16);\n            if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n            else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n        }return x};\n    h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n    if(!f||!t)return null;\n    if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n    else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n    a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n    if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n    else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n}\n\nftfHelpers.invertColor = function( hex, bw ) {\n    if ( !hex ){\n        return null;\n    }\n    if ( hex.indexOf( '#' ) === 0 ) {\n        hex = hex.slice( 1 );\n    }\n\n    if ( hex.length === 3 ) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\n        g = parseInt( hex.slice( 2, 4 ), 16 ),\n        b = parseInt( hex.slice( 4, 6 ), 16 );\n\n    if ( bw ) {\n        return ( r * 0.299 + g * 0.587 + b * 0.114 ) > 186\n            ? '#000000'\n            : '#FFFFFF';\n    }\n\n    r = ( 255 - r ).toString( 16 );\n    g = ( 255 - g ).toString( 16 );\n    b = ( 255 - b ).toString( 16 );\n\n    return '#' + ftfHelpers.padZero( r ) + ftfHelpers.padZero( g ) + ftfHelpers.padZero( b );\n}\n\nftfHelpers.padZero = function( str, len ) {\n    len = len || 2;\n    var zeros = new Array( len ).join( '0' );\n    return ( zeros + str ).slice( -len );\n}\n\nftfHelpers.renderChart = function( chartEl ){\n    if ( !chartEl ){ return false; }\n\n    let chartOptions = {};\n\n    if ( chartEl.dataset.config ){\n        try{\n            // chartOptions = JSON.parse( chartEl.dataset.config );\n            chartOptions = eval( '(' + chartEl.dataset.config + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    } else{\n        let colorSchemeIndex = 3;\n        let datavizType = chartEl.dataset.type || 'bar';\n\n        let chartLabels, chartData;\n        if ( chartEl.dataset.sourceId ){\n            if ( datavizType === 'scatter' ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( datavizType === 'scatter-dates' ){\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( chartEl.dataset.sort && chartEl.dataset.sort === 'true' ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_sorted ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_sorted ) );\n            } else {\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series ) );\n            }            \n        }\n\n        if ( chartEl.dataset.ignoreNull && chartEl.dataset.ignoreNull === 'true' ){\n\n            chartData.forEach( function( datapoints, indexOuter ){\n                let removeDatapoint = true;\n\n                datapoints.forEach( function( datapoint, indexInner ){\n                    if ( chartData[indexOuter][indexInner] && parseInt( chartData[indexOuter][indexInner] ) !== 0 ){\n                        removeDatapoint = false;\n                    }\n                } );\n\n                if ( removeDatapoint ){\n                    delete chartData[indexOuter];\n                    delete chartLabels[indexOuter];\n                }\n            } );\n\n            chartData = chartData.filter( function ( item ){ return item != undefined } );\n            chartLabels = chartLabels.filter( function ( item ){ return item != undefined } );\n        }\n\n\n        if ( chartEl.dataset.sort && chartEl.dataset.sort === 'true' && chartEl.dataset.limit ){\n            chartLabels = chartLabels.slice( 0, chartEl.dataset.limit );\n            chartData = chartData.slice( 0, chartEl.dataset.limit );\n        }\n\n        if ( chartData && chartData.length > 3 ){\n            colorSchemeIndex = chartData.length;\n        }\n\n        const dataRows = chartData ? chartData[0].length : 0;\n        let datasets = [];\n\n        for( let i = 0; i < dataRows; i++ ){\n            let dataArray = [];\n            let label = '';\n\n            chartData.forEach( function( data, index ){\n                if ( chartEl.dataset.sourceId ){\n                    label = window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_values[i];                    \n                }\n\n                // const label = chartData[i][index];\n                dataArray.push( chartData[index][i] );\n            } );\n\n            let dataset = {\n                label: label,\n                data: dataArray,\n                __custom_meta: {\n                    prefix: chartEl.dataset.prefix,\n                    suffix: chartEl.dataset.suffix\n                }\n            };\n\n            if ( chartEl.dataset.colorScheme ){\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    if ( [ 'bar', 'horizontalBar' ].indexOf( datavizType ) !== -1 ){\n                        dataset.backgroundColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                    } else if ( datavizType === 'line' ){\n                        dataset.borderColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                        dataset.fill = false;\n                    }\n                }\n\n            }\n\n            datasets.push( dataset );\n        }\n\n        if ( chartEl.dataset.columnFilter && chartEl.dataset.columnFilter === 'true' ){\n            for ( let i = 1; i < datasets.length; i++ ){\n                let selectHtml = `<label>${datasets[i].label}\n                    <select name=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\" id=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\">\n                      ${\n                        datasets[i].data.map( function( data ){\n                            return `<option value=\"option\">option</option>`;\n                        } )\n                      }\n                    </select>\n                </label>`; \n            }\n        \n            datasets = [datasets[0]];\n        }\n\n        chartOptions = {\n            type: datavizType,\n            data: {\n                labels: chartLabels,\n                datasets: datasets\n            },\n            options: {}\n        };\n\n        let axesLabels, axesValues;\n\n        switch ( datavizType ){\n            case 'horizontalBar':\n            case 'bar':\n            case 'line':\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: chartEl.dataset.label\n                    },\n                    type: chartEl.dataset.logScale ? 'logarithmic' : 'linear',\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    }\n                }];\n\n                if ( chartEl.dataset.logScale && chartData.length > 4 ){\n                    /* Temporary fix for labels overlapping when using logarithmic scale. */\n                    // axesValues[0].ticks.minRotation = 30;\n                    axesValues[0].ticks.maxTicksLimit = chartData.length;\n                }\n\n                if ( ftfHelpers.isAdmin() ){\n                    // axesValues[0].ticks.maxTicksLimit = chartData.length;\n                    axesValues[0].ticks.maxTicksLimit = 4;\n                }\n\n                if ( datavizType === 'horizontalBar' ){\n                    chartOptions.options.scales = {\n                        xAxes: axesValues,\n                        yAxes: axesLabels\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        label: function( tooltipItem, data ) {\n                            return data['datasets'][0]['__custom_meta']['prefix'] + tooltipItem.xLabel.toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                        }\n                      }\n                    }\n\n                } else {\n                    chartOptions.options.scales = {\n                        xAxes: axesLabels,\n                        yAxes: axesValues\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        title: function(tooltipItem, data) {\n                            return data.datasets[tooltipItem[0].datasetIndex].label;\n                        },\n                        label: function( tooltipItem, data ) {\n                            return `${data.labels[tooltipItem.index]}: ${data['datasets'][0]['__custom_meta']['prefix']}${tooltipItem.yLabel.toLocaleString()}${data['datasets'][0]['__custom_meta']['suffix']}`;\n                        }\n                      }\n                    }\n                }                \n\n                chartOptions.options.responsive = true;\n\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    chartOptions.data.datasets.forEach( function( dataset, index ){\n                        dataset.hoverBorderWidth = 4;\n                        dataset.hoverBorderColor = ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][index] ) );\n                        dataset.borderWidth = 4;\n                    } );\n\n                }\n\n                break;\n            case 'pie':\n            case 'doughnut':\n            case 'polarArea':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }\n\n                            chartOptions.data.datasets[i].backgroundColor = selectedColorScheme;\n                            chartOptions.data.datasets[i].hoverBorderColor = selectedColorScheme.map( function( color ){\n                                return ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( color ) );\n                            } );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'radar':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                    \n\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }                        \n                            // chartOptions.data.datasets[i].fill = 'start';\n                            chartOptions.data.datasets[i].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[i], 20 );\n                            chartOptions.data.datasets[i].borderColor = ftfHelpers.convertHex( selectedColorScheme[i], 40 );\n                            chartOptions.data.datasets[i].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[i] ) ), 40 );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'scatter':\n            case 'scatter-dates':\n                const labelX = chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : '',\n                      labelY = chartOptions.data.datasets[0].label;\n\n                let selectedColorScheme;\n\n                if ( chartEl.dataset.colorScheme && chartOptions.data.datasets[0] ){\n                    if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                    } else {\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                    }\n\n\n                    chartOptions.data.datasets[0].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[0], 20 );\n                    chartOptions.data.datasets[0].borderColor = ftfHelpers.convertHex( selectedColorScheme[0], 40 );\n                    chartOptions.data.datasets[0].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[0] ) ), 40 );\n                }\n\n                chartOptions.data.datasets[0].hoverBorderWidth = 4;\n                chartOptions.data.datasets[0].borderWidth = 4;\n\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        // max: 3,\n                        // beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: labelY\n                    },\n                    type: chartEl.dataset.logScale ? 'logarithmic' : 'linear',\n                    ticks: {\n                        // beginAtZero: true,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    }\n                }];   \n                \n                chartOptions.options.scales = {\n                    xAxes: axesValues,\n                    yAxes: axesLabels\n                };  \n\n                let datapoints = [];\n                chartOptions.data.labels.forEach( function( dataset, i ){\n\n                    let datapoint = { x: null, y: null };\n\n                    if ( datavizType === 'scatter-dates' ){\n                        chartOptions.type = 'scatter';\n                        chartOptions.options.scales = {\n                            'xAxes': [\n                                {\n                                   'type': 'time',\n                                   'position': 'bottom',\n                                   'ticks': {\n                                        beginAtZero: false,\n                                        stepSize: 10,\n\n                                        callback: (value) => {\n                                          return new Date( value ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric' } );\n                                        },\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        beginAtZero: false,\n                                        display: false\n                                    },\n                                    scaleLabel: {\n                                        display: false,\n                                        // labelString: chartEl.dataset.axisLabelData\n                                        // labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                                        // labelString: 'Day of the month'\n                                    },\n                                    minorTickInterval: null\n                                }\n                            ]\n                        };\n\n                        chartOptions.options.legend = {\n                            display: false\n                        };\n\n                        const d = new Date( chartOptions.data.labels[i] );\n                        datapoint.x = d;\n\n                        // Day of the month\n                        datapoint.y = d.getDate();\n\n                        // datapoint.y = i;\n                        // datapoint.y = 0;\n\n                    } else {\n                        datapoint.x = parseFloat( chartOptions.data.labels[i] );\n                        datapoint.y = parseFloat( chartOptions.data.datasets[0].data[i] );\n                    }\n\n                    datapoints.push( datapoint );\n                } );\n                chartOptions.data.datasets[0].data = datapoints;\n                chartOptions.data.datasets = [chartOptions.data.datasets[0]];\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                      return new Date( data['labels'][tooltipItem[0]['index']] ).toLocaleDateString( navigator.language, { day: 'numeric', month: 'long', year: 'numeric' } );\n\n                    },\n                    label: function( tooltipItem, data ) {\n                        return chartEl.dataset.prefix + window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw[tooltipItem['index']] + chartEl.dataset.suffix;\n                    }\n                  }\n                }                \n                break;\n        }\n\n    }\n\n    if ( !chartEl.dataset.showGridlines || chartEl.dataset.showGridlines.toString() === 'false' ){\n        chartOptions.options.scales = chartOptions.options.scales  || {};\n        chartOptions.options.scales.xAxes = chartOptions.options.scales.xAxes  || [];\n        chartOptions.options.scales.yAxes = chartOptions.options.scales.yAxes  || [];\n\n        chartOptions.options.scales.xAxes.forEach( function( xAxis ){\n            xAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n\n        chartOptions.options.scales.yAxes.forEach( function( yAxis ){\n            yAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n    }\n    if ( chartEl.dataset.options ){\n        try{\n            chartOptions.options = eval( '(' + chartEl.dataset.options + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    }\n\n    if ( ftfHelpers.isMobile() ){\n        chartEl.height = chartEl.width;\n    }\n\n    if ( chartOptions ){\n        console.log( 'rendering chart...', chartEl, chartOptions );\n        // console.log( 'data', chartOptions.data.datasets );\n\n        let newChart = new Chart( chartEl, chartOptions );\n\n        if ( !ftfHelpers.isAdmin() ){\n            /* Chart.js accessibility via https://codepen.io/kurkle/pen/WNrwjMp */\n\n            let selectedIndex = -1;\n            const meta = newChart.getDatasetMeta( 0 );\n\n            function clearActive() {\n                if (selectedIndex > -1) {\n                    meta.controller.removeHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                }\n            }\n\n            function activate() {\n                meta.controller.setHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                newChart.render();\n            }\n\n            function activateNext() {\n                clearActive();\n                selectedIndex = (selectedIndex + 1) % meta.data.length;\n                activate();\n            }\n\n            function activatePrev() {\n                clearActive();\n                selectedIndex = ( selectedIndex || meta.data.length ) -1;\n                activate();\n            }\n\n            chartEl.addEventListener( 'focus', function(){\n                if (selectedIndex === -1) {\n                    activateNext();\n                } else {\n                    activate();\n                }\n            } );\n\n            chartEl.addEventListener( 'blur', function(){\n                clearActive();\n                newChart.render();\n            } );\n\n            chartEl.addEventListener( 'keydown', function( e ) {\n                if ( e.key === 'ArrowRight' ) {\n                    activateNext();\n                } else if ( e.key === 'ArrowLeft' ) {\n                    activatePrev();\n                }\n            } );\n        }\n    }\n}\n\nftfHelpers.isAdmin = function(){\n    const wpAdmin = document.getElementsByClassName( 'wp-admin' );\n    return wpAdmin && wpAdmin.length;\n}\n\nready( function(){\n    let charts = document.getElementsByClassName( 'ftf-dataviz-chart' );\n    Array.from( charts ).forEach( function( chartEl ){\n        ftfHelpers.renderChart( chartEl );\n    } );\n} );\n"]}